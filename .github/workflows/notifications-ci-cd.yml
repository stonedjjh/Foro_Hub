name: CI/CD - Notificaciones Service

on:
  push:
    branches:
      - refactor/desacoplamiento-dominio-persistencia # O tu rama principal (ej. develop)
    paths:
      - 'foro-hub-notifications-service/**' # Se activa solo si hay cambios en esta subcarpeta
  pull_request:
    branches:
      - main
    paths:
      - 'foro-hub-notifications-service/**'
  workflow_dispatch: # Permite ejecutar el workflow manualmente desde GitHub UI

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Permiso para leer el código del repositorio
      packages: write # Permiso para escribir (push) imágenes en GitHub Container Registry

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4 # Clona el repositorio

      - name: Configurar Java 17 con Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # O 'adopt' o 'zulu'
          cache: 'maven' # Cacha las dependencias de Maven para builds más rápidos

      - name: Construir el proyecto con Maven (saltando tests)
        # Construye el JAR ejecutable. Se saltan los tests aquí para que el paso de tests los ejecute explícitamente.
        run: mvn clean install -DskipTests -f foro-hub-notifications-service/pom.xml

      - name: Ejecutar pruebas unitarias y de integración
        # Ejecuta todos los tests definidos en el proyecto.
        run: mvn test -f foro-hub-notifications-service/pom.xml

      - name: Iniciar sesión en GitHub Container Registry
        # Utiliza el token de GitHub Actions para autenticarse en GHCR.
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Construir y etiquetar la imagen Docker
        # Construye la imagen usando el Dockerfile en la carpeta del servicio.
        # La etiqueta incluye el nombre del repositorio y el nombre del servicio.
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/foro-hub-notifications-service:latest -f foro-hub-notifications-service/Dockerfile .

      - name: Subir la imagen Docker a GitHub Container Registry
        # Empuja la imagen construida al GHCR.
        run: docker push ghcr.io/${{ github.repository_owner }}/foro-hub-notifications-service:latest

  deploy-to-render:
    needs: build-test-and-push # Este trabajo depende del éxito del trabajo anterior
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Activar redespliegue en Render
        # Envía una petición POST al webhook de despliegue de Render.
        # Asegúrate de configurar este secreto en tu repositorio de GitHub.
        run: curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL_NOTIFICATIONS }}"
