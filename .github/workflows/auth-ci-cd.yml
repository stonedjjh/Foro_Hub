name: CI/CD - Auth Service

on:
  push:
    branches:
      - refactor/desacoplamiento-dominio-persistencia
    paths:
      - 'foro-hub-auth-service/**'
  pull_request:
    branches:
      - refactor/desacoplamiento-dominio-persistencia
    paths:
      - 'foro-hub-auth-service/**'
  workflow_dispatch:

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    services: # <-- ¡Aquí es donde debe ir el bloque de servicios!
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Debug - Listar contenido del directorio de trabajo
        run: |
          echo "Contenido de ${{ github.workspace }}:"
          ls -R ${{ github.workspace }}
          echo "Directorio actual: $(pwd)"
          ls -R .

      - name: Configurar Java 17 con Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Construir el proyecto con Maven (saltando tests)
        working-directory: ./foro-hub-auth-service
        run: mvn clean install -DskipTests

      - name: Esperar a que la base de datos esté lista
        run: |
          echo "Esperando 10 segundos a que el servicio de MySQL esté listo..."
          sleep 10 # Se recomienda usar una herramienta como "wait-for-it.sh" en entornos de producción, pero para este caso 'sleep' es suficiente.

      #- name: Ejecutar pruebas unitarias y de integración
      #  working-directory: ./foro-hub-auth-service
      #  run: mvn test

      - name: Iniciar sesión en GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Construir y etiquetar la imagen Docker
        working-directory: ./foro-hub-auth-service
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/foro-hub-auth-service:latest .

      - name: Subir la imagen Docker a GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository_owner }}/foro-hub-auth-service:latest

  deploy-to-render:
    needs: build-test-and-push # Este trabajo depende del éxito del trabajo anterior
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Activar redespliegue en Render
        # Envía una petición POST al webhook de despliegue de Render.
        # Asegúrate de configurar este secreto en tu repositorio de GitHub.
        run: curl -X POST "${{ secrets.RENDER_HOCK_AUTH_SERVICE }}"