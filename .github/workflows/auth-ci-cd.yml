name: CI/CD - Auth Service

on:
  push:
    branches:
      - refactor/desacoplamiento-dominio-persistencia # La rama donde quieres que se ejecute
    paths:
      - 'foro-hub-auth-service/**' # Se activa solo si hay cambios en esta subcarpeta
  pull_request:
    branches:
      - refactor/desacoplamiento-dominio-persistencia # La rama de destino para Pull Requests
    paths:
      - 'foro-hub-auth-service/**'
  workflow_dispatch: # Permite ejecutar el workflow manualmente desde GitHub UI

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Permiso para leer el código del repositorio
      packages: write # Permiso para escribir (push) imágenes en GitHub Container Registry

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4 # Clona el repositorio

      - name: Debug - Listar contenido del directorio de trabajo
        run: |
          echo "Contenido de ${{ github.workspace }}:"
          ls -R ${{ github.workspace }}
          echo "Directorio actual: $(pwd)"
          ls -R .

      - name: Configurar Java 17 con Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # O 'adopt' o 'zulu'
          cache: 'maven' # Cacha las dependencias de Maven para builds más rápidos

      - name: Construir el proyecto con Maven (saltando tests)
        # Usa working-directory para cambiar el contexto a la carpeta del servicio.
        working-directory: ./foro-hub-auth-service # <-- Directorio del servicio de auth
        run: mvn clean install -DskipTests

      - name: Ejecutar pruebas unitarias y de integración
        # Usa working-directory para cambiar el contexto.
        working-directory: ./foro-hub-auth-service # <-- Directorio del servicio de auth
        run: mvn test

      - name: Iniciar sesión en GitHub Container Registry
        # Utiliza el token de GitHub Actions para autenticarse en GHCR.
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Construir y etiquetar la imagen Docker
        # Ejecutar este paso desde el directorio del microservicio de auth.
        working-directory: ./foro-hub-auth-service # <-- Directorio del servicio de auth
        run: |
          # El Dockerfile ya está en el directorio de trabajo actual.
          docker build -t ghcr.io/${{ github.repository_owner }}/foro-hub-auth-service:latest .
          # ^^^ Asegúrate de que esta línea no tenga '-f' y termine con un punto '.'

      - name: Subir la imagen Docker a GitHub Container Registry
        # Empuja la imagen construida al GHCR.
        run: docker push ghcr.io/${{ github.repository_owner }}/foro-hub-auth-service:latest

